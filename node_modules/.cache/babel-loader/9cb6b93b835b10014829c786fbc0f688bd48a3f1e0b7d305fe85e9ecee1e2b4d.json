{"ast":null,"code":"var _jsxFileName = \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/SendMsg.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, idField, serverTimestamp, orderBy, query, limit } from \"firebase/firestore\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatroom = () => {\n  _s();\n  const dummy = useRef();\n  const messagesRef = collection(db, \"messages\");\n  // Query for the 25 more recent messages\n  const q = query(messagesRef, orderBy('timestamp', 'asc'), limit(25));\n  const [messages] = useCollectionData(q, {\n    idField: 'id'\n  });\n  const [formValue, setFormValue] = useState('');\n\n  // Asynchronous function that will send messages using the value of the inputted text\n  const sendMsg = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser;\n    await addDoc(messagesRef, {\n      message: formValue,\n      timestamp: serverTimestamp(),\n      sender_id: uid\n    });\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMsg,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue,\n        onChange: e => setFormValue(e.target.value),\n        placeholder: \"hehe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formValue,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatroom, \"NX0eAKMykrgqWBRdNpM7iVcnAm4=\", false, function () {\n  return [useCollectionData];\n});\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useRef","useState","auth","db","addDoc","collection","idField","serverTimestamp","orderBy","query","limit","useCollectionData","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatroom","_s","dummy","messagesRef","q","messages","formValue","setFormValue","sendMsg","e","preventDefault","uid","photoURL","currentUser","message","timestamp","sender_id","current","scrollIntoView","behavior","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","disabled","_c","$RefreshReg$"],"sources":["/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/SendMsg.js"],"sourcesContent":["\n\nimport React, { useRef, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, idField, serverTimestamp, orderBy, query, limit } from \"firebase/firestore\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nconst Chatroom = () => {\n    const dummy = useRef();\n    const messagesRef = collection(db, \"messages\");\n    // Query for the 25 more recent messages\n    const q = query(messagesRef, orderBy('timestamp', 'asc'), limit(25));\n\n    const [messages] = useCollectionData(q, {idField: 'id'});\n\n    const [formValue, setFormValue] = useState('');\n\n    // Asynchronous function that will send messages using the value of the inputted text\n    const sendMsg = async(e) => {\n        e.preventDefault();\n        const {uid, photoURL} = auth.currentUser;\n        await addDoc(messagesRef, {\n            message: formValue,\n            timestamp: serverTimestamp(),\n            sender_id: uid,\n        })\n\n        setFormValue('');\n        dummy.current.scrollIntoView({ behavior: 'smooth'});\n    }\n\n    return (\n        <>\n        <main>\n            {/* {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)} */}\n            <span ref={dummy}></span>\n        </main>\n        <form onSubmit={sendMsg}>\n            <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"hehe\"/>\n            <button type=\"submit\" disabled={!formValue}>send</button>\n        </form>\n            \n        </>\n    );\n\n}\n\nexport default Chatroom;"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AACtC,SAASC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,eAAe,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AACxG,SAASC,iBAAiB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,KAAK,GAAGlB,MAAM,CAAC,CAAC;EACtB,MAAMmB,WAAW,GAAGd,UAAU,CAACF,EAAE,EAAE,UAAU,CAAC;EAC9C;EACA,MAAMiB,CAAC,GAAGX,KAAK,CAACU,WAAW,EAAEX,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,EAAEE,KAAK,CAAC,EAAE,CAAC,CAAC;EAEpE,MAAM,CAACW,QAAQ,CAAC,GAAGV,iBAAiB,CAACS,CAAC,EAAE;IAACd,OAAO,EAAE;EAAI,CAAC,CAAC;EAExD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMuB,OAAO,GAAG,MAAMC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM;MAACC,GAAG;MAAEC;IAAQ,CAAC,GAAG1B,IAAI,CAAC2B,WAAW;IACxC,MAAMzB,MAAM,CAACe,WAAW,EAAE;MACtBW,OAAO,EAAER,SAAS;MAClBS,SAAS,EAAExB,eAAe,CAAC,CAAC;MAC5ByB,SAAS,EAAEL;IACf,CAAC,CAAC;IAEFJ,YAAY,CAAC,EAAE,CAAC;IAChBL,KAAK,CAACe,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CAAC;EACvD,CAAC;EAED,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACAvB,OAAA;MAAAuB,QAAA,eAEIvB,OAAA;QAAMwB,GAAG,EAAEnB;MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACP5B,OAAA;MAAM6B,QAAQ,EAAElB,OAAQ;MAAAY,QAAA,gBACpBvB,OAAA;QAAO8B,KAAK,EAAErB,SAAU;QAACsB,QAAQ,EAAGnB,CAAC,IAAKF,YAAY,CAACE,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAACG,WAAW,EAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5F5B,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAE,CAAC1B,SAAU;QAAAc,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA,eAEL,CAAC;AAGX,CAAC;AAAAxB,EAAA,CAtCKD,QAAQ;EAAA,QAMSL,iBAAiB;AAAA;AAAAsC,EAAA,GANlCjC,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}