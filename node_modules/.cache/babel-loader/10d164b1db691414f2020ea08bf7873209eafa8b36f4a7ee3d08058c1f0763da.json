{"ast":null,"code":"import _regeneratorRuntime from\"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _ref;import{db}from'../firebase';import{doc,setDoc,getDoc}from'firebase/firestore';// Function to store user data in Firestore, checking for existing document\nexport var storeUserData=function storeUserData(_x,_x2,_x3,_x4){return(_ref=_ref||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(uid,email,displayName,photoURL){var userRef,userDoc,emailPrefix;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;userRef=doc(db,'users',uid);// Check if the document already exists\n_context.next=4;return getDoc(userRef);case 4:userDoc=_context.sent;if(userDoc.exists()){_context.next=12;break;}// Extract the email prefix from the email\nemailPrefix=email.split('@')[0];// Document doesn't exist, so create it with the email prefix as the username\n_context.next=9;return setDoc(userRef,{email:email,name:displayName,uid:uid,pfp:photoURL,username:emailPrefix,// Set the username to the email prefix\nchatrooms:[]});case 9:console.log('User data stored successfully');_context.next=13;break;case 12:// Document already exists, do nothing\nconsole.log('User data already exists in Firestore');case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.error('Error storing user data:',_context.t0);case 18:case\"end\":return _context.stop();}},_callee,null,[[0,15]]);}))).apply(this,arguments);};","map":{"version":3,"names":["db","doc","setDoc","getDoc","storeUserData","_x","_x2","_x3","_x4","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","uid","email","displayName","photoURL","userRef","userDoc","emailPrefix","wrap","_callee$","_context","prev","next","sent","exists","split","name","pfp","username","chatrooms","console","log","t0","error","stop","apply","arguments"],"sources":["/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/StoreUser.js"],"sourcesContent":["import { db } from '../firebase';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\n\n// Function to store user data in Firestore, checking for existing document\nexport const storeUserData = async (uid, email, displayName, photoURL) => {\n  try {\n    const userRef = doc(db, 'users', uid);\n\n    // Check if the document already exists\n    const userDoc = await getDoc(userRef);\n\n    if (!userDoc.exists()) {\n      // Extract the email prefix from the email\n      const emailPrefix = email.split('@')[0];\n\n      // Document doesn't exist, so create it with the email prefix as the username\n      await setDoc(userRef, {\n        email: email,\n        name: displayName,\n        uid: uid,\n        pfp: photoURL,\n        username: emailPrefix, // Set the username to the email prefix\n        chatrooms: []\n      });\n      console.log('User data stored successfully');\n    } else {\n      // Document already exists, do nothing\n      console.log('User data already exists in Firestore');\n    }\n  } catch (error) {\n    console.error('Error storing user data:', error);\n  }\n};\n"],"mappings":"mTAAA,OAASA,EAAE,KAAQ,aAAa,CAChC,OAASC,GAAG,CAAEC,MAAM,CAAEC,MAAM,KAAQ,oBAAoB,CAExD;AACA,MAAO,IAAM,CAAAC,aAAa,SAAb,CAAAA,aAAaA,CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,IAAA,CAAAA,IAAA,EAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,CAAEC,KAAK,CAAEC,WAAW,CAAEC,QAAQ,MAAAC,OAAA,CAAAC,OAAA,CAAAC,WAAA,QAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAE3DN,OAAO,CAAGjB,GAAG,CAACD,EAAE,CAAE,OAAO,CAAEc,GAAG,CAAC,CAErC;AAAAS,QAAA,CAAAE,IAAA,SACsB,CAAAtB,MAAM,CAACe,OAAO,CAAC,QAA/BC,OAAO,CAAAI,QAAA,CAAAG,IAAA,IAERP,OAAO,CAACQ,MAAM,CAAC,CAAC,EAAAJ,QAAA,CAAAE,IAAA,WACnB;AACML,WAAW,CAAGL,KAAK,CAACa,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAEvC;AAAAL,QAAA,CAAAE,IAAA,SACM,CAAAvB,MAAM,CAACgB,OAAO,CAAE,CACpBH,KAAK,CAAEA,KAAK,CACZc,IAAI,CAAEb,WAAW,CACjBF,GAAG,CAAEA,GAAG,CACRgB,GAAG,CAAEb,QAAQ,CACbc,QAAQ,CAAEX,WAAW,CAAE;AACvBY,SAAS,CAAE,EACb,CAAC,CAAC,QACFC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAACX,QAAA,CAAAE,IAAA,kBAE7C;AACAQ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CAAC,QAAAX,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAY,EAAA,CAAAZ,QAAA,aAGvDU,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAAb,QAAA,CAAAY,EAAO,CAAC,CAAC,yBAAAZ,QAAA,CAAAc,IAAA,MAAAxB,OAAA,iBAEpD,IAAAyB,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}