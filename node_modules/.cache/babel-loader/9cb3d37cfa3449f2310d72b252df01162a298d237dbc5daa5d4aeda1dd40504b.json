{"ast":null,"code":"var _jsxFileName = \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/CreateChatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { getDoc, doc, collection, serverTimestamp, orderBy, query, limit, where } from \"firebase/firestore\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n// To do: Beautify the chat bubbles, put in CSS for the submission form, add in user PFP\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateChatroom = ({\n  setChatroom\n}) => {\n  _s();\n  const [chatrooms, setChatrooms] = useState([]);\n\n  // Asynchronously gather the chatrooms under the current user\n  const getUserChatrooms = async () => {\n    const user = await getDoc(userQuery);\n    if (user.data()) {\n      // if (user[0] && user[0][0]?.chatrooms) {\n      //     setChatrooms(user[0][0].chatrooms);\n      // }\n      // else {\n      //     setChatrooms([]);\n      // }\n      console.log(user.data());\n    } else {\n      setChatrooms([]);\n    }\n  };\n  useEffect(() => {\n    // Check if the current user is set\n    if (auth.currentUser) {\n      const userRef = collection(db, \"users\");\n      const q = query(userRef, where(\"uid\", \"==\", auth.currentUser.uid));\n      getDoc(q);\n    }\n    getUserChatrooms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chatrooms.map((chatroom, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setChatroom(chatroom),\n      children: chatroom\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateChatroom, \"P+6xWbp0lEZ22pGZE0VRaJnj8cY=\");\n_c = CreateChatroom;\nexport default CreateChatroom;\nvar _c;\n$RefreshReg$(_c, \"CreateChatroom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","auth","db","getDoc","doc","collection","serverTimestamp","orderBy","query","limit","where","useCollectionData","jsxDEV","_jsxDEV","CreateChatroom","setChatroom","_s","chatrooms","setChatrooms","getUserChatrooms","user","userQuery","data","console","log","currentUser","userRef","q","uid","children","map","chatroom","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/CreateChatroom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { getDoc, doc, collection, serverTimestamp, orderBy, query, limit, where } from \"firebase/firestore\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n// To do: Beautify the chat bubbles, put in CSS for the submission form, add in user PFP\n\nconst CreateChatroom = ({ setChatroom }) => {\n\n    const [chatrooms, setChatrooms] = useState([]);\n    \n\n    // Asynchronously gather the chatrooms under the current user\n    const getUserChatrooms = async () => {\n        const user = await getDoc(userQuery)\n        if (user.data()) {\n            // if (user[0] && user[0][0]?.chatrooms) {\n            //     setChatrooms(user[0][0].chatrooms);\n            // }\n            // else {\n            //     setChatrooms([]);\n            // }\n            console.log(user.data())\n        }\n        else{\n            setChatrooms([]);\n        }\n        \n    }\n    useEffect(() => {\n        // Check if the current user is set\n        if (auth.currentUser) {\n            const userRef = collection(db, \"users\");\n            const q = query(userRef, where(\"uid\", \"==\", auth.currentUser.uid));\n            getDoc(q);\n        }\n        getUserChatrooms();\n    }, []);\n\n\n\n    return (\n        <div>\n            {chatrooms.map((chatroom, index) => (\n                <button key={index} onClick={() => setChatroom(chatroom)}>\n                    {chatroom}\n                </button>\n            ))}\n        </div>\n    );\n\n}\n\nexport default CreateChatroom;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AACtC,SAASC,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAEC,eAAe,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAC3G,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAExC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAG9C;EACA,MAAMmB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,IAAI,GAAG,MAAMjB,MAAM,CAACkB,SAAS,CAAC;IACpC,IAAID,IAAI,CAACE,IAAI,CAAC,CAAC,EAAE;MACb;MACA;MACA;MACA;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,MACG;MACAJ,YAAY,CAAC,EAAE,CAAC;IACpB;EAEJ,CAAC;EACDpB,SAAS,CAAC,MAAM;IACZ;IACA,IAAIG,IAAI,CAACwB,WAAW,EAAE;MAClB,MAAMC,OAAO,GAAGrB,UAAU,CAACH,EAAE,EAAE,OAAO,CAAC;MACvC,MAAMyB,CAAC,GAAGnB,KAAK,CAACkB,OAAO,EAAEhB,KAAK,CAAC,KAAK,EAAE,IAAI,EAAET,IAAI,CAACwB,WAAW,CAACG,GAAG,CAAC,CAAC;MAClEzB,MAAM,CAACwB,CAAC,CAAC;IACb;IACAR,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACIN,OAAA;IAAAgB,QAAA,EACKZ,SAAS,CAACa,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC3BnB,OAAA;MAAoBoB,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACgB,QAAQ,CAAE;MAAAF,QAAA,EACpDE;IAAQ,GADAC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGd,CAAC;AAAArB,EAAA,CA5CKF,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}