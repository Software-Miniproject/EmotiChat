{"ast":null,"code":"var _jsxFileName = \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/CreateChatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, getDocs, collection, serverTimestamp, orderBy, query, limit, where } from \"firebase/firestore\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n// To do: Beautify the chat bubbles, put in CSS for the submission form, add in user PFP\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateChatroom = ({\n  setChatroom\n}) => {\n  _s();\n  const userRef = collection(db, 'users');\n  const q = query(userRef, where(\"uid\", \"==\", auth.currentUser.uid));\n  const [chatrooms, setChatrooms] = useState([]);\n  const user = useCollectionData(q);\n\n  // Asynchronously gather the chatrooms under the current user\n  const getUserChatrooms = async () => {\n    if (user && user.length > 0 && user[0][0].chatrooms) {\n      setChatrooms(user[0][0].chatrooms);\n    } else {\n      setChatrooms([]);\n    }\n  };\n  useEffect(() => {\n    getUserChatrooms();\n  }, []);\n  const [selectedChatroom, setSelectedChatroom] = useState(null);\n  const handleChatroomSelection = chatroom => {\n    setSelectedChatroom(chatroom);\n    setChatroom(chatroom);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [chatrooms.map((chatroom, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleChatroomSelection(chatroom),\n      children: chatroom\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)), selectedChatroom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Selected Chatroom: \", selectedChatroom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateChatroom, \"ducpD9psL4gz8u6OXJnirOorG8Y=\", false, function () {\n  return [useCollectionData];\n});\n_c = CreateChatroom;\nexport default CreateChatroom;\nvar _c;\n$RefreshReg$(_c, \"CreateChatroom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","auth","db","addDoc","getDocs","collection","serverTimestamp","orderBy","query","limit","where","useCollectionData","jsxDEV","_jsxDEV","CreateChatroom","setChatroom","_s","userRef","q","currentUser","uid","chatrooms","setChatrooms","user","getUserChatrooms","length","selectedChatroom","setSelectedChatroom","handleChatroomSelection","chatroom","children","map","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/CreateChatroom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, getDocs, collection, serverTimestamp, orderBy, query, limit, where } from \"firebase/firestore\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n// To do: Beautify the chat bubbles, put in CSS for the submission form, add in user PFP\n\nconst CreateChatroom = ({ setChatroom }) => {\n    const userRef = collection(db, 'users');\n    const q = query(userRef, where(\"uid\", \"==\", auth.currentUser.uid));\n    const [chatrooms, setChatrooms] = useState([]);\n    const user = useCollectionData(q);\n    \n\n    // Asynchronously gather the chatrooms under the current user\n    const getUserChatrooms = async () => {\n        if (user && user.length > 0 && user[0][0].chatrooms) {\n            setChatrooms(user[0][0].chatrooms);\n        }\n        else{\n            setChatrooms([]);\n        }\n        \n    }\n    useEffect(() => {\n        getUserChatrooms();\n    }, []);\n\n    const [selectedChatroom, setSelectedChatroom] = useState(null);\n\n    const handleChatroomSelection = (chatroom) => {\n        setSelectedChatroom(chatroom);\n        setChatroom(chatroom);\n    }\n\n    return (\n        <div>\n            {chatrooms.map((chatroom, index) => (\n                <button key={index} onClick={() => handleChatroomSelection(chatroom)}>\n                    {chatroom}\n                </button>\n            ))}\n            \n            {selectedChatroom && (\n                <div>Selected Chatroom: {selectedChatroom}</div>\n            )}\n        </div>\n    );\n\n}\n\nexport default CreateChatroom;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AACtC,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,eAAe,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAC/G,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,OAAO,GAAGZ,UAAU,CAACH,EAAE,EAAE,OAAO,CAAC;EACvC,MAAMgB,CAAC,GAAGV,KAAK,CAACS,OAAO,EAAEP,KAAK,CAAC,KAAK,EAAE,IAAI,EAAET,IAAI,CAACkB,WAAW,CAACC,GAAG,CAAC,CAAC;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMuB,IAAI,GAAGZ,iBAAiB,CAACO,CAAC,CAAC;;EAGjC;EACA,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,IAAIF,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,SAAS,EAAE;MACjDC,YAAY,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,SAAS,CAAC;IACtC,CAAC,MACG;MACAC,YAAY,CAAC,EAAE,CAAC;IACpB;EAEJ,CAAC;EACDxB,SAAS,CAAC,MAAM;IACZ0B,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAM4B,uBAAuB,GAAIC,QAAQ,IAAK;IAC1CF,mBAAmB,CAACE,QAAQ,CAAC;IAC7Bd,WAAW,CAACc,QAAQ,CAAC;EACzB,CAAC;EAED,oBACIhB,OAAA;IAAAiB,QAAA,GACKT,SAAS,CAACU,GAAG,CAAC,CAACF,QAAQ,EAAEG,KAAK,kBAC3BnB,OAAA;MAAoBoB,OAAO,EAAEA,CAAA,KAAML,uBAAuB,CAACC,QAAQ,CAAE;MAAAC,QAAA,EAChED;IAAQ,GADAG,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACX,CAAC,EAEDX,gBAAgB,iBACbb,OAAA;MAAAiB,QAAA,GAAK,qBAAmB,EAACJ,gBAAgB;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAClD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd,CAAC;AAAArB,EAAA,CA1CKF,cAAc;EAAA,QAIHH,iBAAiB;AAAA;AAAA2B,EAAA,GAJ5BxB,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}