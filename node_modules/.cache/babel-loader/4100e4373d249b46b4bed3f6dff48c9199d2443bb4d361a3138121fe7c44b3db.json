{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\EmotiChat\\\\EmotiChat\\\\EmotiChat\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { storeUserData } from '../components/StoreUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    googleSignIn,\n    user\n  } = UserAuth();\n  const navigate = useNavigate();\n  const [userDataStored, setUserDataStored] = useState(false);\n  const handleGoogleSignIn = async () => {\n    try {\n      await googleSignIn();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    const handleUserSignIn = async () => {\n      if (user) {\n        const {\n          uid,\n          email,\n          displayName\n        } = user;\n        try {\n          await storeUserData(uid, email, displayName);\n          setUserDataStored(true);\n          navigate('/account');\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    if (user != null && !userDataStored) {\n      handleUserSignIn();\n    } else if (userDataStored) {\n      navigate('/account');\n    }\n  }, [user, navigate, userDataStored]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      type: \"button\",\n      class: \"login-with-google-btn\",\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"iQhpWImOUBqUVCGmRs12s44fRKc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","UserAuth","useNavigate","storeUserData","jsxDEV","_jsxDEV","Login","_s","googleSignIn","user","navigate","userDataStored","setUserDataStored","useState","handleGoogleSignIn","error","console","log","handleUserSignIn","uid","email","displayName","className","children","onClick","type","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/EmotiChat/EmotiChat/EmotiChat/src/pages/login.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { UserAuth } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { storeUserData } from '../components/StoreUser';\r\n\r\nconst Login = () => {\r\n\r\n    const { googleSignIn, user } = UserAuth();\r\n    const navigate = useNavigate();\r\n    const [userDataStored, setUserDataStored] = useState(false);\r\n\r\n    const handleGoogleSignIn = async () => {\r\n        try {\r\n            await googleSignIn();\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        const handleUserSignIn = async () => {\r\n            if (user) {\r\n                const { uid, email, displayName } = user;\r\n                try {\r\n                    await storeUserData(uid, email, displayName);\r\n                    setUserDataStored(true);\r\n                    navigate('/account');\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (user != null && !userDataStored) {\r\n            handleUserSignIn();\r\n        } else if (userDataStored) {\r\n            navigate('/account');\r\n        }\r\n    }, [user, navigate, userDataStored]);\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <button onClick={handleGoogleSignIn} type=\"button\" class=\"login-with-google-btn\" >\r\n                Sign in with Google\r\n            </button>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM;IAAEC,YAAY;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACzC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMN,YAAY,CAAC,CAAC;IAExB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZ,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIT,IAAI,EAAE;QACN,MAAM;UAAEU,GAAG;UAAEC,KAAK;UAAEC;QAAY,CAAC,GAAGZ,IAAI;QACxC,IAAI;UACA,MAAMN,aAAa,CAACgB,GAAG,EAAEC,KAAK,EAAEC,WAAW,CAAC;UAC5CT,iBAAiB,CAAC,IAAI,CAAC;UACvBF,QAAQ,CAAC,UAAU,CAAC;QACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACtB;MACJ;IACJ,CAAC;IAED,IAAIN,IAAI,IAAI,IAAI,IAAI,CAACE,cAAc,EAAE;MACjCO,gBAAgB,CAAC,CAAC;IACtB,CAAC,MAAM,IAAIP,cAAc,EAAE;MACvBD,QAAQ,CAAC,UAAU,CAAC;IACxB;EACJ,CAAC,EAAE,CAACD,IAAI,EAAEC,QAAQ,EAAEC,cAAc,CAAC,CAAC;EAGpC,oBACIN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAEhBlB,OAAA;MAAQmB,OAAO,EAAEV,kBAAmB;MAACW,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAC,uBAAuB;MAAAH,QAAA,EAAE;IAElF;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGd,CAAC;AAACvB,EAAA,CA9CID,KAAK;EAAA,QAGUJ,WAAW;AAAA;AAAA6B,EAAA,GAH1BzB,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}