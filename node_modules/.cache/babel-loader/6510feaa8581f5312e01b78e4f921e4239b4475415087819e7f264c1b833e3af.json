{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\EmotiChat\\\\EmotiChat\\\\EmotiChat\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { storeUserData } from '../components/StoreUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    googleSignIn,\n    user\n  } = UserAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleSignIn = async () => {\n      try {\n        await googleSignIn();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const handleUserSignIn = async () => {\n      if (user) {\n        const {\n          uid,\n          email,\n          displayName\n        } = user;\n        try {\n          await storeUserData(user); // Pass the user object directly\n          navigate('/account');\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    // Check if the user is authenticated\n    if (user) {\n      handleUserSignIn();\n    } else {\n      // If the user is not authenticated, trigger sign-in\n      handleSignIn();\n    }\n  }, [user, googleSignIn, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: googleSignIn,\n      type: \"button\",\n      className: \"login-with-google-btn\",\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","UserAuth","useNavigate","storeUserData","jsxDEV","_jsxDEV","Login","_s","googleSignIn","user","navigate","handleSignIn","error","console","log","handleUserSignIn","uid","email","displayName","className","children","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/EmotiChat/EmotiChat/EmotiChat/src/pages/login.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { UserAuth } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { storeUserData } from '../components/StoreUser';\r\n\r\nconst Login = () => {\r\n    const { googleSignIn, user } = UserAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const handleSignIn = async () => {\r\n            try {\r\n                await googleSignIn();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        const handleUserSignIn = async () => {\r\n            if (user) {\r\n                const { uid, email, displayName } = user;\r\n                try {\r\n                    await storeUserData(user); // Pass the user object directly\r\n                    navigate('/account');\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n        };\r\n\r\n        // Check if the user is authenticated\r\n        if (user) {\r\n            handleUserSignIn();\r\n        } else {\r\n            // If the user is not authenticated, trigger sign-in\r\n            handleSignIn();\r\n        }\r\n    }, [user, googleSignIn, navigate]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <button onClick={googleSignIn} type=\"button\" className=\"login-with-google-btn\">\r\n                Sign in with Google\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,YAAY;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACzC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMH,YAAY,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IAED,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIN,IAAI,EAAE;QACN,MAAM;UAAEO,GAAG;UAAEC,KAAK;UAAEC;QAAY,CAAC,GAAGT,IAAI;QACxC,IAAI;UACA,MAAMN,aAAa,CAACM,IAAI,CAAC,CAAC,CAAC;UAC3BC,QAAQ,CAAC,UAAU,CAAC;QACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACtB;MACJ;IACJ,CAAC;;IAED;IACA,IAAIH,IAAI,EAAE;MACNM,gBAAgB,CAAC,CAAC;IACtB,CAAC,MAAM;MACH;MACAJ,YAAY,CAAC,CAAC;IAClB;EACJ,CAAC,EAAE,CAACF,IAAI,EAAED,YAAY,EAAEE,QAAQ,CAAC,CAAC;EAElC,oBACIL,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBf,OAAA;MAAQgB,OAAO,EAAEb,YAAa;MAACc,IAAI,EAAC,QAAQ;MAACH,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAE/E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACnB,EAAA,CAzCID,KAAK;EAAA,QAEUJ,WAAW;AAAA;AAAAyB,EAAA,GAF1BrB,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}