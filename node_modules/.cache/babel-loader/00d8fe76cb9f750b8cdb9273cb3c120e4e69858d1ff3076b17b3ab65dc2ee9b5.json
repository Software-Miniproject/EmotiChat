{"ast":null,"code":"import _objectSpread from\"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link}from\"react-router-dom\";import{db}from'../firebase';import{doc,updateDoc,query,where,getDocs,collection}from'firebase/firestore';import{UserAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Username=function Username(){var _ref3;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newUsername=_useState2[0],setNewUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),successMessage=_useState4[0],setSuccessMessage=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];var _UserAuth=UserAuth(),user=_UserAuth.user,setUser=_UserAuth.setUser;// Import setUser from the UserAuth context\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),otherUserEmailPrefixes=_useState8[0],setOtherUserEmailPrefixes=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),existingUsernames=_useState10[0],setExistingUsernames=_useState10[1];useEffect(function(){var _ref,_ref2;// Query Firestore to get email prefixes of other users\nvar fetchOtherUserEmailPrefixes=function fetchOtherUserEmailPrefixes(){return(_ref=_ref||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var usersCollection,querySnapshot,emailPrefixes;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;usersCollection=collection(db,'users');_context.next=4;return getDocs(usersCollection);case 4:querySnapshot=_context.sent;emailPrefixes=querySnapshot.docs.filter(function(doc){return doc.id!==user.uid;})// Exclude the current user's document\n.map(function(doc){return doc.data().email.split('@')[0];});setOtherUserEmailPrefixes(emailPrefixes);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error('Error fetching other users:',_context.t0);case 12:case\"end\":return _context.stop();}},_callee,null,[[0,9]]);}))).apply(this,arguments);};var fetchExistingUsernames=function fetchExistingUsernames(){return(_ref2=_ref2||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var usersCollection,querySnapshot,usernames;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;usersCollection=collection(db,'users');_context2.next=4;return getDocs(usersCollection);case 4:querySnapshot=_context2.sent;usernames=querySnapshot.docs.map(function(doc){return doc.data().username;});setExistingUsernames(usernames);_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.error('Error fetching existing usernames:',_context2.t0);case 12:case\"end\":return _context2.stop();}},_callee2,null,[[0,9]]);}))).apply(this,arguments);};fetchOtherUserEmailPrefixes();fetchExistingUsernames();},[user.uid]);var handleUsernameChange=function handleUsernameChange(e){var username=e.target.value;// Check if the username is valid (contains only letters, numbers, ., and _ and is no longer than 30 characters)\nvar isValidUsername=/^[a-zA-Z0-9._]{3,30}$/.test(username);if(!isValidUsername){setErrorMessage('Invalid username format. It can only contain letters, numbers, ., and _ and must be 3 to 30 characters long.');}else{setErrorMessage('');// Clear the error message if the username is valid\n}setNewUsername(username);};var handleSaveUsername=function handleSaveUsername(){return(_ref3=_ref3||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var isValidUsername,uid,userRef;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(!(newUsername.trim()==='')){_context3.next=4;break;}setErrorMessage('Username cannot be empty');return _context3.abrupt(\"return\");case 4:if(!existingUsernames.includes(newUsername)){_context3.next=7;break;}setErrorMessage('Username is already in use by another user');return _context3.abrupt(\"return\");case 7:if(!otherUserEmailPrefixes.includes(newUsername)){_context3.next=10;break;}setErrorMessage('Username is already in use by another user');return _context3.abrupt(\"return\");case 10:// Check if the username is valid (contains only letters, numbers, ., and _ and is no longer than 30 characters)\nisValidUsername=/^[a-zA-Z0-9._]{3,30}$/.test(newUsername);if(isValidUsername){_context3.next=14;break;}setErrorMessage('Invalid username format. It can only contain letters, numbers, ., and _ and must be 3 to 30 characters long.');return _context3.abrupt(\"return\");case 14:// Update the username in the Firestore document\nuid=user.uid;userRef=doc(db,'users',uid);_context3.next=18;return updateDoc(userRef,{username:newUsername});case 18:// Update the username property in the user state\nsetUser(function(prevUser){return _objectSpread(_objectSpread({},prevUser),{},{username:newUsername});});setSuccessMessage('Username updated successfully');// Clear success message after 2 seconds\nsetTimeout(function(){return setSuccessMessage('');},2000);_context3.next=28;break;case 23:_context3.prev=23;_context3.t0=_context3[\"catch\"](0);console.error('Error updating username:',_context3.t0);setErrorMessage('Error updating username: '+_context3.t0.message);// Include error message in the error state\n// Clear error message after 2 seconds\nsetTimeout(function(){return setErrorMessage('');},2000);case 28:case\"end\":return _context3.stop();}},_callee3,null,[[0,23]]);}))).apply(this,arguments);};return/*#__PURE__*/_jsxs(\"div\",{className:\"username-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Change Username\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newUsername,onChange:handleUsernameChange,placeholder:\"New Username\"/* Added placeholder for clarity */}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveUsername,className:\"username-save-btn\",children:\"Save\"}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:successMessage}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Link,{to:\"/account\",className:\"username-account-link\",children:\"My Account\"})})]})]});};export default Username;","map":{"version":3,"names":["React","useState","useEffect","Link","db","doc","updateDoc","query","where","getDocs","collection","UserAuth","jsx","_jsx","jsxs","_jsxs","Username","_ref3","_useState","_useState2","_slicedToArray","newUsername","setNewUsername","_useState3","_useState4","successMessage","setSuccessMessage","_useState5","_useState6","errorMessage","setErrorMessage","_UserAuth","user","setUser","_useState7","_useState8","otherUserEmailPrefixes","setOtherUserEmailPrefixes","_useState9","_useState10","existingUsernames","setExistingUsernames","_ref","_ref2","fetchOtherUserEmailPrefixes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","usersCollection","querySnapshot","emailPrefixes","wrap","_callee$","_context","prev","next","sent","docs","filter","id","uid","map","data","email","split","t0","console","error","stop","apply","arguments","fetchExistingUsernames","_callee2","usernames","_callee2$","_context2","username","handleUsernameChange","e","target","value","isValidUsername","test","handleSaveUsername","_callee3","userRef","_callee3$","_context3","trim","abrupt","includes","prevUser","_objectSpread","setTimeout","message","className","children","type","onChange","placeholder","onClick","to"],"sources":["/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/username.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { db } from '../firebase';\nimport { doc, updateDoc, query, where, getDocs, collection } from 'firebase/firestore';\nimport { UserAuth } from '../context/AuthContext';\n\nconst Username = () => {\n    const [newUsername, setNewUsername] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const { user, setUser } = UserAuth(); // Import setUser from the UserAuth context\n    const [otherUserEmailPrefixes, setOtherUserEmailPrefixes] = useState([]);\n    const [existingUsernames, setExistingUsernames] = useState([]);\n\n    useEffect(() => {\n        // Query Firestore to get email prefixes of other users\n        const fetchOtherUserEmailPrefixes = async () => {\n            try {\n                const usersCollection = collection(db, 'users');\n                const querySnapshot = await getDocs(usersCollection);\n\n                const emailPrefixes = querySnapshot.docs\n                    .filter(doc => doc.id !== user.uid) // Exclude the current user's document\n                    .map(doc => doc.data().email.split('@')[0]);\n\n                setOtherUserEmailPrefixes(emailPrefixes);\n            } catch (error) {\n                console.error('Error fetching other users:', error);\n            }\n        };\n\n        const fetchExistingUsernames = async () => {\n            try {\n                const usersCollection = collection(db, 'users');\n                const querySnapshot = await getDocs(usersCollection);\n\n                const usernames = querySnapshot.docs\n                    .map(doc => doc.data().username);\n\n                setExistingUsernames(usernames);\n            } catch (error) {\n                console.error('Error fetching existing usernames:', error);\n            }\n        };\n\n        fetchOtherUserEmailPrefixes();\n        fetchExistingUsernames();\n    }, [user.uid]);\n\n    const handleUsernameChange = (e) => {\n        const username = e.target.value;\n\n        // Check if the username is valid (contains only letters, numbers, ., and _ and is no longer than 30 characters)\n        const isValidUsername = /^[a-zA-Z0-9._]{3,30}$/.test(username);\n\n        if (!isValidUsername) {\n            setErrorMessage('Invalid username format. It can only contain letters, numbers, ., and _ and must be 3 to 30 characters long.');\n        } else {\n            setErrorMessage(''); // Clear the error message if the username is valid\n        }\n\n        setNewUsername(username);\n    };\n\n    const handleSaveUsername = async () => {\n        try {\n            // Validate that the username is not empty\n            if (newUsername.trim() === '') {\n                setErrorMessage('Username cannot be empty');\n                return;\n            }\n    \n            // Check if the username is already in use by another user\n            if (existingUsernames.includes(newUsername)) {\n                setErrorMessage('Username is already in use by another user');\n                return;\n            }\n    \n            // Check if the username matches any other user's email prefix\n            if (otherUserEmailPrefixes.includes(newUsername)) {\n                setErrorMessage('Username is already in use by another user');\n                return;\n            }\n    \n            // Check if the username is valid (contains only letters, numbers, ., and _ and is no longer than 30 characters)\n            const isValidUsername = /^[a-zA-Z0-9._]{3,30}$/.test(newUsername);\n    \n            if (!isValidUsername) {\n                setErrorMessage('Invalid username format. It can only contain letters, numbers, ., and _ and must be 3 to 30 characters long.');\n                return;\n            }\n    \n            // Update the username in the Firestore document\n            const uid = user.uid;\n            const userRef = doc(db, 'users', uid);\n    \n            await updateDoc(userRef, {\n                username: newUsername\n            });\n    \n            // Update the username property in the user state\n            setUser(prevUser => ({ ...prevUser, username: newUsername }));\n    \n            setSuccessMessage('Username updated successfully');\n    \n            // Clear success message after 2 seconds\n            setTimeout(() => setSuccessMessage(''), 2000);\n        } catch (error) {\n            console.error('Error updating username:', error);\n            setErrorMessage('Error updating username: ' + error.message); // Include error message in the error state\n    \n            // Clear error message after 2 seconds\n            setTimeout(() => setErrorMessage(''), 2000);\n        }\n    };\n    \n\n    return (\n        <div className='username-container'>\n          <h1>Change Username</h1>\n          <div>\n            <input\n              type=\"text\"\n              value={newUsername}\n              onChange={handleUsernameChange}\n              placeholder=\"New Username\" /* Added placeholder for clarity */\n            />\n            <button onClick={handleSaveUsername} className=\"username-save-btn\">\n              Save\n            </button>\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n            <p><Link to=\"/account\" className=\"username-account-link\">My Account</Link></p>\n          </div>\n        </div>\n      );\n      \n};\n\nexport default Username;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}