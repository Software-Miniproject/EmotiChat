{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _ERROR_DESCRIPTION_MA, _getErrorFromResponse, _retryIfServerError, _createInstallationRequest, _set, _remove, _update, _getInstallationEntry, _registerInstallation, _waitUntilFidRegistration, _generateAuthTokenRequest, _refreshAuthToken, _waitUntilAuthTokenRequest, _fetchAuthTokenFromServer, _getId, _getToken, _completeInstallationRegistration, _deleteInstallationRequest, _deleteInstallations;\nimport { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\nvar name = \"@firebase/installations\";\nvar version = \"0.6.4\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PENDING_TIMEOUT_MS = 10000;\nvar PACKAGE_VERSION = \"w:\".concat(version);\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nvar SERVICE = 'installations';\nvar SERVICE_NAME = 'Installations';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ERROR_DESCRIPTION_MAP = (_ERROR_DESCRIPTION_MA = {}, _defineProperty(_ERROR_DESCRIPTION_MA, \"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, 'Missing App configuration value: \"{$valueName}\"'), _defineProperty(_ERROR_DESCRIPTION_MA, \"not-registered\" /* ErrorCode.NOT_REGISTERED */, 'Firebase Installation is not registered.'), _defineProperty(_ERROR_DESCRIPTION_MA, \"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */, 'Firebase Installation not found.'), _defineProperty(_ERROR_DESCRIPTION_MA, \"request-failed\" /* ErrorCode.REQUEST_FAILED */, '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"'), _defineProperty(_ERROR_DESCRIPTION_MA, \"app-offline\" /* ErrorCode.APP_OFFLINE */, 'Could not process request. Application offline.'), _defineProperty(_ERROR_DESCRIPTION_MA, \"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */, \"Can't delete installation while there is a pending registration request.\"), _ERROR_DESCRIPTION_MA);\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n  return error instanceof FirebaseError && error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getInstallationsEndpoint(_ref) {\n  var projectId = _ref.projectId;\n  return \"\".concat(INSTALLATIONS_API_URL, \"/projects/\").concat(projectId, \"/installations\");\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n  return {\n    token: response.token,\n    requestStatus: 2 /* RequestStatus.COMPLETED */,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\nfunction getErrorFromResponse(_x, _x2) {\n  return (_getErrorFromResponse = _getErrorFromResponse || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(requestName, response) {\n    var responseJson, errorData;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return response.json();\n        case 2:\n          responseJson = _context.sent;\n          errorData = responseJson.error;\n          return _context.abrupt(\"return\", ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\n            requestName: requestName,\n            serverCode: errorData.code,\n            serverMessage: errorData.message,\n            serverStatus: errorData.status\n          }));\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))).apply(this, arguments);\n}\nfunction getHeaders(_ref2) {\n  var apiKey = _ref2.apiKey;\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\nfunction getHeadersWithAuth(appConfig, _ref3) {\n  var refreshToken = _ref3.refreshToken;\n  var headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nfunction retryIfServerError(_x3) {\n  return (_retryIfServerError = _retryIfServerError || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(fn) {\n    var result;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return fn();\n        case 2:\n          result = _context2.sent;\n          if (!(result.status >= 500 && result.status < 600)) {\n            _context2.next = 5;\n            break;\n          }\n          return _context2.abrupt(\"return\", fn());\n        case 5:\n          return _context2.abrupt(\"return\", result);\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }))).apply(this, arguments);\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n  return \"\".concat(INTERNAL_AUTH_VERSION, \" \").concat(refreshToken);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction createInstallationRequest(_x4, _x5) {\n  return (_createInstallationRequest = _createInstallationRequest || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref4, _ref5) {\n    var appConfig, heartbeatServiceProvider, fid, endpoint, headers, heartbeatService, heartbeatsHeader, body, request, response, responseValue, registeredInstallationEntry;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          appConfig = _ref4.appConfig, heartbeatServiceProvider = _ref4.heartbeatServiceProvider;\n          fid = _ref5.fid;\n          endpoint = getInstallationsEndpoint(appConfig);\n          headers = getHeaders(appConfig); // If heartbeat service exists, add the heartbeat string to the header.\n          heartbeatService = heartbeatServiceProvider.getImmediate({\n            optional: true\n          });\n          if (!heartbeatService) {\n            _context3.next = 10;\n            break;\n          }\n          _context3.next = 8;\n          return heartbeatService.getHeartbeatsHeader();\n        case 8:\n          heartbeatsHeader = _context3.sent;\n          if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n          }\n        case 10:\n          body = {\n            fid: fid,\n            authVersion: INTERNAL_AUTH_VERSION,\n            appId: appConfig.appId,\n            sdkVersion: PACKAGE_VERSION\n          };\n          request = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          _context3.next = 14;\n          return retryIfServerError(function () {\n            return fetch(endpoint, request);\n          });\n        case 14:\n          response = _context3.sent;\n          if (!response.ok) {\n            _context3.next = 23;\n            break;\n          }\n          _context3.next = 18;\n          return response.json();\n        case 18:\n          responseValue = _context3.sent;\n          registeredInstallationEntry = {\n            fid: responseValue.fid || fid,\n            registrationStatus: 2 /* RequestStatus.COMPLETED */,\n            refreshToken: responseValue.refreshToken,\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n          };\n          return _context3.abrupt(\"return\", registeredInstallationEntry);\n        case 23:\n          _context3.next = 25;\n          return getErrorFromResponse('Create Installation', response);\n        case 25:\n          throw _context3.sent;\n        case 26:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }))).apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction bufferToBase64UrlSafe(array) {\n  var b64 = btoa(String.fromCharCode.apply(String, _toConsumableArray(array)));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nvar INVALID_FID = '';\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nfunction generateFid() {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    var fidByteArray = new Uint8Array(17);\n    var crypto = self.crypto || self.msCrypto;\n    crypto.getRandomValues(fidByteArray);\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 112 + fidByteArray[0] % 16;\n    var fid = encode(fidByteArray);\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch (_a) {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n  var b64String = bufferToBase64UrlSafe(fidByteArray);\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a string key that can be used to identify the app. */\nfunction getKey(appConfig) {\n  return \"\".concat(appConfig.appName, \"!\").concat(appConfig.appId);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar fidChangeCallbacks = new Map();\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nfunction fidChanged(appConfig, fid) {\n  var key = getKey(appConfig);\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\nfunction addCallback(appConfig, callback) {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n  var key = getKey(appConfig);\n  var callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\nfunction removeCallback(appConfig, callback) {\n  var key = getKey(appConfig);\n  var callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    return;\n  }\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\nfunction callFidChangeCallbacks(key, fid) {\n  var callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n  var _iterator = _createForOfIteratorHelper(callbacks),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var callback = _step.value;\n      callback(fid);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\nfunction broadcastFidChange(key, fid) {\n  var channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({\n      key: key,\n      fid: fid\n    });\n  }\n  closeBroadcastChannel();\n}\nvar broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel() {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = function (e) {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\nfunction closeBroadcastChannel() {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DATABASE_NAME = 'firebase-installations-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: function upgrade(db, oldVersion) {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nfunction set(_x6, _x7) {\n  return (_set = _set || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(appConfig, value) {\n    var key, db, tx, objectStore, oldValue;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          key = getKey(appConfig);\n          _context4.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context4.sent;\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          objectStore = tx.objectStore(OBJECT_STORE_NAME);\n          _context4.next = 8;\n          return objectStore.get(key);\n        case 8:\n          oldValue = _context4.sent;\n          _context4.next = 11;\n          return objectStore.put(value, key);\n        case 11:\n          _context4.next = 13;\n          return tx.done;\n        case 13:\n          if (!oldValue || oldValue.fid !== value.fid) {\n            fidChanged(appConfig, value.fid);\n          }\n          return _context4.abrupt(\"return\", value);\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }))).apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\nfunction remove(_x8) {\n  return (_remove = _remove || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(appConfig) {\n    var key, db, tx;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          key = getKey(appConfig);\n          _context5.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context5.sent;\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          _context5.next = 7;\n          return tx.objectStore(OBJECT_STORE_NAME).delete(key);\n        case 7:\n          _context5.next = 9;\n          return tx.done;\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }))).apply(this, arguments);\n}\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nfunction update(_x9, _x10) {\n  return (_update = _update || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(appConfig, updateFn) {\n    var key, db, tx, store, oldValue, newValue;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          key = getKey(appConfig);\n          _context6.next = 3;\n          return getDbPromise();\n        case 3:\n          db = _context6.sent;\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          store = tx.objectStore(OBJECT_STORE_NAME);\n          _context6.next = 8;\n          return store.get(key);\n        case 8:\n          oldValue = _context6.sent;\n          newValue = updateFn(oldValue);\n          if (!(newValue === undefined)) {\n            _context6.next = 15;\n            break;\n          }\n          _context6.next = 13;\n          return store.delete(key);\n        case 13:\n          _context6.next = 17;\n          break;\n        case 15:\n          _context6.next = 17;\n          return store.put(newValue, key);\n        case 17:\n          _context6.next = 19;\n          return tx.done;\n        case 19:\n          if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n            fidChanged(appConfig, newValue.fid);\n          }\n          return _context6.abrupt(\"return\", newValue);\n        case 21:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }))).apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nfunction getInstallationEntry(_x11) {\n  return (_getInstallationEntry = _getInstallationEntry || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(installations) {\n    var registrationPromise, installationEntry;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return update(installations.appConfig, function (oldEntry) {\n            var installationEntry = updateOrCreateInstallationEntry(oldEntry);\n            var entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\n            registrationPromise = entryWithPromise.registrationPromise;\n            return entryWithPromise.installationEntry;\n          });\n        case 2:\n          installationEntry = _context7.sent;\n          if (!(installationEntry.fid === INVALID_FID)) {\n            _context7.next = 8;\n            break;\n          }\n          _context7.next = 6;\n          return registrationPromise;\n        case 6:\n          _context7.t0 = _context7.sent;\n          return _context7.abrupt(\"return\", {\n            installationEntry: _context7.t0\n          });\n        case 8:\n          return _context7.abrupt(\"return\", {\n            installationEntry: installationEntry,\n            registrationPromise: registrationPromise\n          });\n        case 9:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }))).apply(this, arguments);\n}\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(oldEntry) {\n  var entry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n  };\n\n  return clearTimedOutRequest(entry);\n}\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\n  if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\n      return {\n        installationEntry: installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n    // Try registering. Change status to IN_PROGRESS.\n    var inProgressEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\n      registrationTime: Date.now()\n    };\n    var registrationPromise = registerInstallation(installations, inProgressEntry);\n    return {\n      installationEntry: inProgressEntry,\n      registrationPromise: registrationPromise\n    };\n  } else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n    return {\n      installationEntry: installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return {\n      installationEntry: installationEntry\n    };\n  }\n}\n/** This will be executed only once for each new Firebase Installation. */\nfunction registerInstallation(_x12, _x13) {\n  return (_registerInstallation = _registerInstallation || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(installations, installationEntry) {\n    var registeredInstallationEntry;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return createInstallationRequest(installations, installationEntry);\n        case 3:\n          registeredInstallationEntry = _context8.sent;\n          return _context8.abrupt(\"return\", set(installations.appConfig, registeredInstallationEntry));\n        case 7:\n          _context8.prev = 7;\n          _context8.t0 = _context8[\"catch\"](0);\n          if (!(isServerError(_context8.t0) && _context8.t0.customData.serverCode === 409)) {\n            _context8.next = 14;\n            break;\n          }\n          _context8.next = 12;\n          return remove(installations.appConfig);\n        case 12:\n          _context8.next = 16;\n          break;\n        case 14:\n          _context8.next = 16;\n          return set(installations.appConfig, {\n            fid: installationEntry.fid,\n            registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n          });\n        case 16:\n          throw _context8.t0;\n        case 17:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[0, 7]]);\n  }))).apply(this, arguments);\n}\n/** Call if FID registration is pending in another request. */\nfunction waitUntilFidRegistration(_x14) {\n  return (_waitUntilFidRegistration = _waitUntilFidRegistration || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(installations) {\n    var entry, _yield$getInstallatio, installationEntry, registrationPromise;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return updateInstallationRequest(installations.appConfig);\n        case 2:\n          entry = _context9.sent;\n        case 3:\n          if (!(entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */)) {\n            _context9.next = 11;\n            break;\n          }\n          _context9.next = 6;\n          return sleep(100);\n        case 6:\n          _context9.next = 8;\n          return updateInstallationRequest(installations.appConfig);\n        case 8:\n          entry = _context9.sent;\n          _context9.next = 3;\n          break;\n        case 11:\n          if (!(entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */)) {\n            _context9.next = 22;\n            break;\n          }\n          _context9.next = 14;\n          return getInstallationEntry(installations);\n        case 14:\n          _yield$getInstallatio = _context9.sent;\n          installationEntry = _yield$getInstallatio.installationEntry;\n          registrationPromise = _yield$getInstallatio.registrationPromise;\n          if (!registrationPromise) {\n            _context9.next = 21;\n            break;\n          }\n          return _context9.abrupt(\"return\", registrationPromise);\n        case 21:\n          return _context9.abrupt(\"return\", installationEntry);\n        case 22:\n          return _context9.abrupt(\"return\", entry);\n        case 23:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }))).apply(this, arguments);\n}\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\n    }\n\n    return clearTimedOutRequest(oldEntry);\n  });\n}\nfunction clearTimedOutRequest(entry) {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n    };\n  }\n\n  return entry;\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n  return installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction generateAuthTokenRequest(_x15, _x16) {\n  return (_generateAuthTokenRequest = _generateAuthTokenRequest || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(_ref6, installationEntry) {\n    var appConfig, heartbeatServiceProvider, endpoint, headers, heartbeatService, heartbeatsHeader, body, request, response, responseValue, completedAuthToken;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          appConfig = _ref6.appConfig, heartbeatServiceProvider = _ref6.heartbeatServiceProvider;\n          endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n          headers = getHeadersWithAuth(appConfig, installationEntry); // If heartbeat service exists, add the heartbeat string to the header.\n          heartbeatService = heartbeatServiceProvider.getImmediate({\n            optional: true\n          });\n          if (!heartbeatService) {\n            _context10.next = 9;\n            break;\n          }\n          _context10.next = 7;\n          return heartbeatService.getHeartbeatsHeader();\n        case 7:\n          heartbeatsHeader = _context10.sent;\n          if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n          }\n        case 9:\n          body = {\n            installation: {\n              sdkVersion: PACKAGE_VERSION,\n              appId: appConfig.appId\n            }\n          };\n          request = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          _context10.next = 13;\n          return retryIfServerError(function () {\n            return fetch(endpoint, request);\n          });\n        case 13:\n          response = _context10.sent;\n          if (!response.ok) {\n            _context10.next = 22;\n            break;\n          }\n          _context10.next = 17;\n          return response.json();\n        case 17:\n          responseValue = _context10.sent;\n          completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n          return _context10.abrupt(\"return\", completedAuthToken);\n        case 22:\n          _context10.next = 24;\n          return getErrorFromResponse('Generate Auth Token', response);\n        case 24:\n          throw _context10.sent;\n        case 25:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }))).apply(this, arguments);\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, _ref7) {\n  var fid = _ref7.fid;\n  return \"\".concat(getInstallationsEndpoint(appConfig), \"/\").concat(fid, \"/authTokens:generate\");\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nfunction refreshAuthToken(_x17) {\n  return (_refreshAuthToken = _refreshAuthToken || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(installations) {\n    var forceRefresh,\n      tokenPromise,\n      entry,\n      authToken,\n      _args11 = arguments;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          forceRefresh = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : false;\n          _context11.next = 3;\n          return update(installations.appConfig, function (oldEntry) {\n            if (!isEntryRegistered(oldEntry)) {\n              throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n            }\n\n            var oldAuthToken = oldEntry.authToken;\n            if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n              // There is a valid token in the DB.\n              return oldEntry;\n            } else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n              // There already is a token request in progress.\n              tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n              return oldEntry;\n            } else {\n              // No token or token expired.\n              if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n              }\n\n              var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n              tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n              return inProgressEntry;\n            }\n          });\n        case 3:\n          entry = _context11.sent;\n          if (!tokenPromise) {\n            _context11.next = 10;\n            break;\n          }\n          _context11.next = 7;\n          return tokenPromise;\n        case 7:\n          _context11.t0 = _context11.sent;\n          _context11.next = 11;\n          break;\n        case 10:\n          _context11.t0 = entry.authToken;\n        case 11:\n          authToken = _context11.t0;\n          return _context11.abrupt(\"return\", authToken);\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }))).apply(this, arguments);\n}\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nfunction waitUntilAuthTokenRequest(_x18, _x19) {\n  return (_waitUntilAuthTokenRequest = _waitUntilAuthTokenRequest || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(installations, forceRefresh) {\n    var entry, authToken;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return updateAuthTokenRequest(installations.appConfig);\n        case 2:\n          entry = _context12.sent;\n        case 3:\n          if (!(entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */)) {\n            _context12.next = 11;\n            break;\n          }\n          _context12.next = 6;\n          return sleep(100);\n        case 6:\n          _context12.next = 8;\n          return updateAuthTokenRequest(installations.appConfig);\n        case 8:\n          entry = _context12.sent;\n          _context12.next = 3;\n          break;\n        case 11:\n          authToken = entry.authToken;\n          if (!(authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */)) {\n            _context12.next = 16;\n            break;\n          }\n          return _context12.abrupt(\"return\", refreshAuthToken(installations, forceRefresh));\n        case 16:\n          return _context12.abrupt(\"return\", authToken);\n        case 17:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }))).apply(this, arguments);\n}\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n    }\n\n    var oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return Object.assign(Object.assign({}, oldEntry), {\n        authToken: {\n          requestStatus: 0 /* RequestStatus.NOT_STARTED */\n        }\n      });\n    }\n\n    return oldEntry;\n  });\n}\nfunction fetchAuthTokenFromServer(_x20, _x21) {\n  return (_fetchAuthTokenFromServer = _fetchAuthTokenFromServer || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(installations, installationEntry) {\n    var authToken, updatedInstallationEntry, _updatedInstallationEntry;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return generateAuthTokenRequest(installations, installationEntry);\n        case 3:\n          authToken = _context13.sent;\n          updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n            authToken: authToken\n          });\n          _context13.next = 7;\n          return set(installations.appConfig, updatedInstallationEntry);\n        case 7:\n          return _context13.abrupt(\"return\", authToken);\n        case 10:\n          _context13.prev = 10;\n          _context13.t0 = _context13[\"catch\"](0);\n          if (!(isServerError(_context13.t0) && (_context13.t0.customData.serverCode === 401 || _context13.t0.customData.serverCode === 404))) {\n            _context13.next = 17;\n            break;\n          }\n          _context13.next = 15;\n          return remove(installations.appConfig);\n        case 15:\n          _context13.next = 20;\n          break;\n        case 17:\n          _updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n            authToken: {\n              requestStatus: 0 /* RequestStatus.NOT_STARTED */\n            }\n          });\n          _context13.next = 20;\n          return set(installations.appConfig, _updatedInstallationEntry);\n        case 20:\n          throw _context13.t0;\n        case 21:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13, null, [[0, 10]]);\n  }))).apply(this, arguments);\n}\nfunction isEntryRegistered(installationEntry) {\n  return installationEntry !== undefined && installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */;\n}\n\nfunction isAuthTokenValid(authToken) {\n  return authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ && !isAuthTokenExpired(authToken);\n}\nfunction isAuthTokenExpired(authToken) {\n  var now = Date.now();\n  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n  var inProgressAuthToken = {\n    requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\n    requestTime: Date.now()\n  };\n  return Object.assign(Object.assign({}, oldEntry), {\n    authToken: inProgressAuthToken\n  });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n  return authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nfunction _getId2(_x22) {\n  return (_getId = _getId || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(installations) {\n    var installationsImpl, _yield$getInstallatio2, installationEntry, registrationPromise;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          installationsImpl = installations;\n          _context14.next = 3;\n          return getInstallationEntry(installationsImpl);\n        case 3:\n          _yield$getInstallatio2 = _context14.sent;\n          installationEntry = _yield$getInstallatio2.installationEntry;\n          registrationPromise = _yield$getInstallatio2.registrationPromise;\n          if (registrationPromise) {\n            registrationPromise.catch(console.error);\n          } else {\n            // If the installation is already registered, update the authentication\n            // token if needed.\n            refreshAuthToken(installationsImpl).catch(console.error);\n          }\n          return _context14.abrupt(\"return\", installationEntry.fid);\n        case 8:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14);\n  }))).apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nfunction _getToken2(_x23) {\n  return (_getToken = _getToken || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(installations) {\n    var forceRefresh,\n      installationsImpl,\n      authToken,\n      _args15 = arguments;\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          forceRefresh = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : false;\n          installationsImpl = installations;\n          _context15.next = 4;\n          return completeInstallationRegistration(installationsImpl);\n        case 4:\n          _context15.next = 6;\n          return refreshAuthToken(installationsImpl, forceRefresh);\n        case 6:\n          authToken = _context15.sent;\n          return _context15.abrupt(\"return\", authToken.token);\n        case 8:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15);\n  }))).apply(this, arguments);\n}\nfunction completeInstallationRegistration(_x24) {\n  return (_completeInstallationRegistration = _completeInstallationRegistration || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(installations) {\n    var _yield$getInstallatio3, registrationPromise;\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return getInstallationEntry(installations);\n        case 2:\n          _yield$getInstallatio3 = _context16.sent;\n          registrationPromise = _yield$getInstallatio3.registrationPromise;\n          if (!registrationPromise) {\n            _context16.next = 7;\n            break;\n          }\n          _context16.next = 7;\n          return registrationPromise;\n        case 7:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }))).apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction deleteInstallationRequest(_x25, _x26) {\n  return (_deleteInstallationRequest = _deleteInstallationRequest || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(appConfig, installationEntry) {\n    var endpoint, headers, request, response;\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          endpoint = getDeleteEndpoint(appConfig, installationEntry);\n          headers = getHeadersWithAuth(appConfig, installationEntry);\n          request = {\n            method: 'DELETE',\n            headers: headers\n          };\n          _context17.next = 5;\n          return retryIfServerError(function () {\n            return fetch(endpoint, request);\n          });\n        case 5:\n          response = _context17.sent;\n          if (response.ok) {\n            _context17.next = 10;\n            break;\n          }\n          _context17.next = 9;\n          return getErrorFromResponse('Delete Installation', response);\n        case 9:\n          throw _context17.sent;\n        case 10:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }))).apply(this, arguments);\n}\nfunction getDeleteEndpoint(appConfig, _ref8) {\n  var fid = _ref8.fid;\n  return \"\".concat(getInstallationsEndpoint(appConfig), \"/\").concat(fid);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Deletes the Firebase Installation and all associated data.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nfunction deleteInstallations(_x27) {\n  return (_deleteInstallations = _deleteInstallations || _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(installations) {\n    var appConfig, entry;\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          appConfig = installations.appConfig;\n          _context18.next = 3;\n          return update(appConfig, function (oldEntry) {\n            if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n              // Delete the unregistered entry without sending a deleteInstallation request.\n              return undefined;\n            }\n            return oldEntry;\n          });\n        case 3:\n          entry = _context18.sent;\n          if (!entry) {\n            _context18.next = 18;\n            break;\n          }\n          if (!(entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */)) {\n            _context18.next = 9;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\n        case 9:\n          if (!(entry.registrationStatus === 2 /* RequestStatus.COMPLETED */)) {\n            _context18.next = 18;\n            break;\n          }\n          if (navigator.onLine) {\n            _context18.next = 14;\n            break;\n          }\n          throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n        case 14:\n          _context18.next = 16;\n          return deleteInstallationRequest(appConfig, entry);\n        case 16:\n          _context18.next = 18;\n          return remove(appConfig);\n        case 18:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }))).apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n * @param installations - The `Installations` instance.\n * @param callback - The callback function that is invoked when FID changes.\n * @returns A function that can be called to unsubscribe.\n *\n * @public\n */\nfunction onIdChange(installations, callback) {\n  var appConfig = installations.appConfig;\n  addCallback(appConfig, callback);\n  return function () {\n    removeCallback(appConfig, callback);\n  };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an instance of {@link Installations} associated with the given\n * {@link @firebase/app#FirebaseApp} instance.\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\n *\n * @public\n */\nfunction getInstallations() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  var installationsImpl = _getProvider(app, 'installations').getImmediate();\n  return installationsImpl;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n  // Required app config keys\n  var configKeys = ['projectId', 'apiKey', 'appId'];\n  for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {\n    var keyName = _configKeys[_i];\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n  return {\n    appName: app.name,\n    projectId: app.options.projectId,\n    apiKey: app.options.apiKey,\n    appId: app.options.appId\n  };\n}\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n    valueName: valueName\n  });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar INSTALLATIONS_NAME = 'installations';\nvar INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\nvar publicFactory = function publicFactory(container) {\n  var app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  var appConfig = extractAppConfig(app);\n  var heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n  var installationsImpl = {\n    app: app,\n    appConfig: appConfig,\n    heartbeatServiceProvider: heartbeatServiceProvider,\n    _delete: function _delete() {\n      return Promise.resolve();\n    }\n  };\n  return installationsImpl;\n};\nvar internalFactory = function internalFactory(container) {\n  var app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  var installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n  var installationsInternal = {\n    getId: function getId() {\n      return _getId2(installations);\n    },\n    getToken: function getToken(forceRefresh) {\n      return _getToken2(installations, forceRefresh);\n    }\n  };\n  return installationsInternal;\n};\nfunction registerInstallations() {\n  _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n}\n\n/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, 'esm2017');\nexport { deleteInstallations, _getId2 as getId, getInstallations, _getToken2 as getToken, onIdChange };","map":{"version":3,"names":["PENDING_TIMEOUT_MS","PACKAGE_VERSION","concat","version","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","_ERROR_DESCRIPTION_MA","_defineProperty","ERROR_FACTORY","ErrorFactory","isServerError","error","FirebaseError","code","includes","getInstallationsEndpoint","_ref","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","getExpiresInFromResponseExpiresIn","creationTime","Date","now","getErrorFromResponse","_x","_x2","_getErrorFromResponse","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestName","responseJson","errorData","wrap","_callee$","_context","prev","next","json","sent","abrupt","create","serverCode","serverMessage","message","serverStatus","status","stop","apply","arguments","getHeaders","_ref2","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","_ref3","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","_x3","_retryIfServerError","_callee2","fn","result","_callee2$","_context2","responseExpiresIn","Number","replace","createInstallationRequest","_x4","_x5","_createInstallationRequest","_callee3","_ref4","_ref5","heartbeatServiceProvider","fid","endpoint","heartbeatService","heartbeatsHeader","body","request","responseValue","registeredInstallationEntry","_callee3$","_context3","getImmediate","optional","getHeartbeatsHeader","authVersion","appId","sdkVersion","method","JSON","stringify","fetch","ok","registrationStatus","authToken","sleep","ms","Promise","resolve","setTimeout","bufferToBase64UrlSafe","array","b64","btoa","String","fromCharCode","_toConsumableArray","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","crypto","self","msCrypto","getRandomValues","encode","test","_a","b64String","substr","getKey","appName","fidChangeCallbacks","Map","fidChanged","key","callFidChangeCallbacks","broadcastFidChange","addCallback","callback","getBroadcastChannel","callbackSet","get","Set","set","add","removeCallback","delete","size","closeBroadcastChannel","callbacks","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","err","e","f","channel","postMessage","broadcastChannel","BroadcastChannel","onmessage","data","close","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","_x6","_x7","_set","_callee4","tx","objectStore","oldValue","_callee4$","_context4","transaction","put","remove","_x8","_remove","_callee5","_callee5$","_context5","update","_x9","_x10","_update","_callee6","updateFn","store","newValue","_callee6$","_context6","undefined","getInstallationEntry","_x11","_getInstallationEntry","_callee7","installations","registrationPromise","installationEntry","_callee7$","_context7","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","t0","entry","clearTimedOutRequest","navigator","onLine","registrationPromiseWithError","reject","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","_x12","_x13","_registerInstallation","_callee8","_callee8$","_context8","customData","_x14","_waitUntilFidRegistration","_callee9","_yield$getInstallatio","_callee9$","_context9","updateInstallationRequest","hasInstallationRequestTimedOut","generateAuthTokenRequest","_x15","_x16","_generateAuthTokenRequest","_callee10","_ref6","completedAuthToken","_callee10$","_context10","getGenerateAuthTokenEndpoint","installation","_ref7","refreshAuthToken","_x17","_refreshAuthToken","_callee11","forceRefresh","tokenPromise","_args11","_callee11$","_context11","length","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","_x18","_x19","_waitUntilAuthTokenRequest","_callee12","_callee12$","_context12","updateAuthTokenRequest","hasAuthTokenRequestTimedOut","Object","assign","_x20","_x21","_fetchAuthTokenFromServer","_callee13","updatedInstallationEntry","_updatedInstallationEntry","_callee13$","_context13","isAuthTokenExpired","inProgressAuthToken","requestTime","getId","_x22","_getId","_callee14","installationsImpl","_yield$getInstallatio2","_callee14$","_context14","catch","console","getToken","_x23","_getToken","_callee15","_args15","_callee15$","_context15","completeInstallationRegistration","_x24","_completeInstallationRegistration","_callee16","_yield$getInstallatio3","_callee16$","_context16","deleteInstallationRequest","_x25","_x26","_deleteInstallationRequest","_callee17","_callee17$","_context17","getDeleteEndpoint","_ref8","deleteInstallations","_x27","_deleteInstallations","_callee18","_callee18$","_context18","onIdChange","getInstallations","app","getApp","_getProvider","extractAppConfig","options","getMissingValueError","name","configKeys","_i","_configKeys","keyName","valueName","INSTALLATIONS_NAME","INSTALLATIONS_NAME_INTERNAL","publicFactory","container","getProvider","_delete","internalFactory","installationsInternal","registerInstallations","_registerComponent","Component","registerVersion"],"sources":["/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/util/constants.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/util/errors.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/functions/common.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/functions/create-installation-request.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/util/sleep.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/helpers/buffer-to-base64-url-safe.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/helpers/generate-fid.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/util/get-key.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/helpers/fid-changed.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/helpers/idb-manager.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/helpers/get-installation-entry.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/functions/generate-auth-token-request.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/helpers/refresh-auth-token.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/api/get-id.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/api/get-token.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/functions/delete-installation-request.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/api/delete-installations.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/api/on-id-change.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/api/get-installations.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/helpers/extract-app-config.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/functions/config.ts","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/node_modules/@firebase/installations/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteInstallationRequest } from '../functions/delete-installation-request';\nimport { remove, update } from '../helpers/idb-manager';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Deletes the Firebase Installation and all associated data.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function deleteInstallations(\n  installations: Installations\n): Promise<void> {\n  const { appConfig } = installations as FirebaseInstallationsImpl;\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addCallback, removeCallback } from '../helpers/fid-changed';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * An user defined callback function that gets called when Installations ID changes.\n *\n * @public\n */\nexport type IdChangeCallbackFn = (installationId: string) => void;\n/**\n * Unsubscribe a callback function previously added via {@link IdChangeCallbackFn}.\n *\n * @public\n */\nexport type IdChangeUnsubscribeFn = () => void;\n\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n * @param installations - The `Installations` instance.\n * @param callback - The callback function that is invoked when FID changes.\n * @returns A function that can be called to unsubscribe.\n *\n * @public\n */\nexport function onIdChange(\n  installations: Installations,\n  callback: IdChangeCallbackFn\n): IdChangeUnsubscribeFn {\n  const { appConfig } = installations as FirebaseInstallationsImpl;\n\n  addCallback(appConfig, callback);\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns an instance of {@link Installations} associated with the given\n * {@link @firebase/app#FirebaseApp} instance.\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\n *\n * @public\n */\nexport function getInstallations(app: FirebaseApp = getApp()): Installations {\n  const installationsImpl = _getProvider(app, 'installations').getImmediate();\n  return installationsImpl;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}