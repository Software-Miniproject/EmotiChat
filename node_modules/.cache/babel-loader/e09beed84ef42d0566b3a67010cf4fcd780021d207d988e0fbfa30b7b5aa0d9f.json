{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCA5o2LhFUf5hBjA0pHgmxkjIhXycs-h64\",\n  authDomain: \"emotichat-4a64f.firebaseapp.com\",\n  projectId: \"emotichat-4a64f\",\n  storageBucket: \"emotichat-4a64f.appspot.com\",\n  messagingSenderId: \"596200760817\",\n  appId: \"1:596200760817:web:4ad33dd248f0c8a9881050\",\n  measurementId: \"G-GDZ3R1X1X7\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\n// Initialize requirements for using Google for authentication\nconst auth_provider = new GoogleAuthProvider();\nexport const google_signin = () => {\n  signInWithPopup(auth, auth_provider).then(result => {\n    const name = result.user.displayName;\n    const email = result.user.email;\n    console.log(result);\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const addUserToFirestore = user => {\n  const currentUser = auth.currentUser;\n  if (currentUser && currentUser.uid) {\n    const userRef = db.collection('users').doc(currentUser.uid);\n    userRef.set({\n      name: currentUser.displayName,\n      email: currentUser.email,\n      uid: currentUser.uid\n    }).then(() => {\n      console.log('User data added to Firestore.');\n    }).catch(error => {\n      console.log('Error addind user data to Firestore:', error);\n    });\n  } else {\n    console.error('User not logged in or missing uid.');\n  }\n};\nexport const firestore = getFirestore(app);","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","getAnalytics","getFirestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","db","auth_provider","google_signin","then","result","name","user","displayName","email","console","log","catch","error","addUserToFirestore","currentUser","uid","userRef","collection","doc","set","firestore"],"sources":["C:/Users/andre/Desktop/EmotiChat/EmotiChat/EmotiChat/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCA5o2LhFUf5hBjA0pHgmxkjIhXycs-h64\",\r\n  authDomain: \"emotichat-4a64f.firebaseapp.com\",\r\n  projectId: \"emotichat-4a64f\",\r\n  storageBucket: \"emotichat-4a64f.appspot.com\",\r\n  messagingSenderId: \"596200760817\",\r\n  appId: \"1:596200760817:web:4ad33dd248f0c8a9881050\",\r\n  measurementId: \"G-GDZ3R1X1X7\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\n// Initialize requirements for using Google for authentication\r\nconst auth_provider = new GoogleAuthProvider()\r\nexport const google_signin = () => {\r\n  signInWithPopup(auth, auth_provider)\r\n    .then((result) => {\r\n      const name = result.user.displayName;\r\n      const email = result.user.email;\r\n      console.log(result);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const addUserToFirestore = (user) => {\r\n  const currentUser = auth.currentUser;\r\n  if (currentUser && currentUser.uid) {\r\n    const userRef = db.collection('users').doc(currentUser.uid);\r\n    userRef.set({\r\n      name: currentUser.displayName,\r\n      email: currentUser.email,\r\n      uid: currentUser.uid,\r\n    })\r\n    .then(() => {\r\n      console.log('User data added to Firestore.');\r\n    })\r\n    .catch((error) => {\r\n      console.log('Error addind user data to Firestore:', error);\r\n    });\r\n  } else {\r\n      console.error('User not logged in or missing uid.');\r\n  }\r\n};\r\n\r\nexport const firestore = getFirestore(app);"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAC5E,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,QAAQ,oBAAoB;AACjD;AACA;;AAEA;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,iCAAiC;EAC7CC,SAAS,EAAE,iBAAiB;EAC5BC,aAAa,EAAE,6BAA6B;EAC5CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGd,aAAa,CAACM,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGX,YAAY,CAACU,GAAG,CAAC;AACnC,OAAO,MAAME,IAAI,GAAGf,OAAO,CAACa,GAAG,CAAC;AAChC,OAAO,MAAMG,EAAE,GAAGZ,YAAY,CAACS,GAAG,CAAC;;AAEnC;AACA,MAAMI,aAAa,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;AAC9C,OAAO,MAAMiB,aAAa,GAAGA,CAAA,KAAM;EACjChB,eAAe,CAACa,IAAI,EAAEE,aAAa,CAAC,CACjCE,IAAI,CAAEC,MAAM,IAAK;IAChB,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAI,CAACC,WAAW;IACpC,MAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAI,CAACE,KAAK;IAC/BC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACrB,CAAC,CAAC,CAACO,KAAK,CAAEC,KAAK,IAAK;IAClBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACpB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIP,IAAI,IAAK;EAC1C,MAAMQ,WAAW,GAAGf,IAAI,CAACe,WAAW;EACpC,IAAIA,WAAW,IAAIA,WAAW,CAACC,GAAG,EAAE;IAClC,MAAMC,OAAO,GAAGhB,EAAE,CAACiB,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACJ,WAAW,CAACC,GAAG,CAAC;IAC3DC,OAAO,CAACG,GAAG,CAAC;MACVd,IAAI,EAAES,WAAW,CAACP,WAAW;MAC7BC,KAAK,EAAEM,WAAW,CAACN,KAAK;MACxBO,GAAG,EAAED,WAAW,CAACC;IACnB,CAAC,CAAC,CACDZ,IAAI,CAAC,MAAM;MACVM,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEE,KAAK,CAAC;IAC5D,CAAC,CAAC;EACJ,CAAC,MAAM;IACHH,OAAO,CAACG,KAAK,CAAC,oCAAoC,CAAC;EACvD;AACF,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAGhC,YAAY,CAACS,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}