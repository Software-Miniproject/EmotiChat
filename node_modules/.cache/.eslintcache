[{"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/index.js":"1","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/reportWebVitals.js":"2","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/App.js":"3","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/login.js":"4","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/home.js":"5","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/username.js":"6","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/Protected.js":"7","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/account.js":"8","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/search.js":"9","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/Navbar.js":"10","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/context/AuthContext.js":"11","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/firebase.js":"12","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/DisplayChatrooms.js":"13","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/Messages.js":"14","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/StoreUser.js":"15"},{"size":579,"mtime":1695155081709,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1695155081710,"results":"18","hashOfConfig":"17"},{"size":983,"mtime":1695155081707,"results":"19","hashOfConfig":"17"},{"size":950,"mtime":1695155081710,"results":"20","hashOfConfig":"17"},{"size":831,"mtime":1695155081710,"results":"21","hashOfConfig":"17"},{"size":5496,"mtime":1695155081710,"results":"22","hashOfConfig":"17"},{"size":305,"mtime":1695155081708,"results":"23","hashOfConfig":"17"},{"size":1604,"mtime":1695155081709,"results":"24","hashOfConfig":"17"},{"size":2109,"mtime":1695155714229,"results":"25","hashOfConfig":"17"},{"size":1785,"mtime":1695155081708,"results":"26","hashOfConfig":"17"},{"size":1488,"mtime":1695155081709,"results":"27","hashOfConfig":"17"},{"size":1093,"mtime":1695155081709,"results":"28","hashOfConfig":"17"},{"size":2448,"mtime":1695155081707,"results":"29","hashOfConfig":"17"},{"size":3955,"mtime":1695155667110,"results":"30","hashOfConfig":"17"},{"size":1075,"mtime":1695155081708,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vml0gq",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/index.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/reportWebVitals.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/App.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/login.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/home.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/username.js",["79","80"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { db } from '../firebase';\nimport { doc, updateDoc, query, where, getDocs, collection } from 'firebase/firestore';\nimport { UserAuth } from '../context/AuthContext';\n\nconst Username = () => {\n    const [newUsername, setNewUsername] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const { user, setUser } = UserAuth(); // Import setUser from the UserAuth context\n    const [otherUserEmailPrefixes, setOtherUserEmailPrefixes] = useState([]);\n    const [existingUsernames, setExistingUsernames] = useState([]);\n\n    useEffect(() => {\n        // Query Firestore to get email prefixes of other users\n        const fetchOtherUserEmailPrefixes = async () => {\n            try {\n                const usersCollection = collection(db, 'users');\n                const querySnapshot = await getDocs(usersCollection);\n\n                const emailPrefixes = querySnapshot.docs\n                    .filter(doc => doc.id !== user.uid) // Exclude the current user's document\n                    .map(doc => doc.data().email.split('@')[0]);\n\n                setOtherUserEmailPrefixes(emailPrefixes);\n            } catch (error) {\n                console.error('Error fetching other users:', error);\n            }\n        };\n\n        const fetchExistingUsernames = async () => {\n            try {\n                const usersCollection = collection(db, 'users');\n                const querySnapshot = await getDocs(usersCollection);\n\n                const usernames = querySnapshot.docs\n                    .map(doc => doc.data().username);\n\n                setExistingUsernames(usernames);\n            } catch (error) {\n                console.error('Error fetching existing usernames:', error);\n            }\n        };\n\n        fetchOtherUserEmailPrefixes();\n        fetchExistingUsernames();\n    }, [user.uid]);\n\n    const handleUsernameChange = (e) => {\n        const username = e.target.value;\n\n        // Check if the username is valid (contains only letters, numbers, ., and _ and is no longer than 30 characters)\n        const isValidUsername = /^[a-zA-Z0-9._]{3,30}$/.test(username);\n\n        if (!isValidUsername) {\n            setErrorMessage('Invalid username format. It can only contain letters, numbers, ., and _ and must be 3 to 30 characters long.');\n        } else {\n            setErrorMessage(''); // Clear the error message if the username is valid\n        }\n\n        setNewUsername(username);\n    };\n\n    const handleSaveUsername = async () => {\n        try {\n            // Validate that the username is not empty\n            if (newUsername.trim() === '') {\n                setErrorMessage('Username cannot be empty');\n                return;\n            }\n    \n            // Check if the username is already in use by another user\n            if (existingUsernames.includes(newUsername)) {\n                setErrorMessage('Username is already in use by another user');\n                return;\n            }\n    \n            // Check if the username matches any other user's email prefix\n            if (otherUserEmailPrefixes.includes(newUsername)) {\n                setErrorMessage('Username is already in use by another user');\n                return;\n            }\n    \n            // Check if the username is valid (contains only letters, numbers, ., and _ and is no longer than 30 characters)\n            const isValidUsername = /^[a-zA-Z0-9._]{3,30}$/.test(newUsername);\n    \n            if (!isValidUsername) {\n                setErrorMessage('Invalid username format. It can only contain letters, numbers, ., and _ and must be 3 to 30 characters long.');\n                return;\n            }\n    \n            // Update the username in the Firestore document\n            const uid = user.uid;\n            const userRef = doc(db, 'users', uid);\n    \n            await updateDoc(userRef, {\n                username: newUsername\n            });\n    \n            // Update the username property in the user state\n            setUser(prevUser => ({ ...prevUser, username: newUsername }));\n    \n            setSuccessMessage('Username updated successfully');\n    \n            // Clear success message after 2 seconds\n            setTimeout(() => setSuccessMessage(''), 2000);\n        } catch (error) {\n            console.error('Error updating username:', error);\n            setErrorMessage('Error updating username: ' + error.message); // Include error message in the error state\n    \n            // Clear error message after 2 seconds\n            setTimeout(() => setErrorMessage(''), 2000);\n        }\n    };\n    \n\n    return (\n        <div className='username-container'>\n          <h1>Change Username</h1>\n          <div>\n            <input\n              type=\"text\"\n              value={newUsername}\n              onChange={handleUsernameChange}\n              placeholder=\"New Username\" /* Added placeholder for clarity */\n            />\n            <button onClick={handleSaveUsername} className=\"username-save-btn\">\n              Save\n            </button>\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n            <p><Link to=\"/account\" className=\"username-account-link\">My Account</Link></p>\n          </div>\n        </div>\n      );\n      \n};\n\nexport default Username;\n","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/Protected.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/account.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/pages/search.js",["81","82"],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/Navbar.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/context/AuthContext.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/firebase.js",["83","84","85","86"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signInWithRedirect } from 'firebase/auth';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCA5o2LhFUf5hBjA0pHgmxkjIhXycs-h64\",\n  authDomain: \"emotichat-4a64f.firebaseapp.com\",\n  projectId: \"emotichat-4a64f\",\n  storageBucket: \"emotichat-4a64f.appspot.com\",\n  messagingSenderId: \"596200760817\",\n  appId: \"1:596200760817:web:4ad33dd248f0c8a9881050\",\n  measurementId: \"G-GDZ3R1X1X7\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nexport const firestore = getFirestore(app);\n\n","/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/DisplayChatrooms.js",[],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/Messages.js",["87"],[],"/Users/trevorchan/Desktop/Senior Project/mini/EmotiChat/src/components/StoreUser.js",[],[],{"ruleId":"88","severity":1,"message":"89","line":4,"column":26,"nodeType":"90","messageId":"91","endLine":4,"endColumn":31},{"ruleId":"88","severity":1,"message":"92","line":4,"column":33,"nodeType":"90","messageId":"91","endLine":4,"endColumn":38},{"ruleId":"88","severity":1,"message":"93","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":44},{"ruleId":"94","severity":1,"message":"95","line":18,"column":70,"nodeType":"96","messageId":"97","endLine":18,"endColumn":71,"fix":"98"},{"ruleId":"88","severity":1,"message":"99","line":3,"column":19,"nodeType":"90","messageId":"91","endLine":3,"endColumn":37},{"ruleId":"88","severity":1,"message":"100","line":3,"column":39,"nodeType":"90","messageId":"91","endLine":3,"endColumn":54},{"ruleId":"88","severity":1,"message":"101","line":3,"column":56,"nodeType":"90","messageId":"91","endLine":3,"endColumn":74},{"ruleId":"88","severity":1,"message":"102","line":23,"column":7,"nodeType":"90","messageId":"91","endLine":23,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":95,"column":8,"nodeType":"105","endLine":95,"endColumn":10,"suggestions":"106"},"no-unused-vars","'query' is defined but never used.","Identifier","unusedVar","'where' is defined but never used.","'useRef' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"107","text":"108"},"'GoogleAuthProvider' is defined but never used.","'signInWithPopup' is defined but never used.","'signInWithRedirect' is defined but never used.","'analytics' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSenderInfo'. Either include it or remove the dependency array.","ArrayExpression",["109"],[696,697],"",{"desc":"110","fix":"111"},"Update the dependencies array to be: [getSenderInfo]",{"range":"112","text":"113"},[3620,3622],"[getSenderInfo]"]